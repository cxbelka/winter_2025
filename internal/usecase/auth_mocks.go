// Code generated by MockGen. DO NOT EDIT.
// Source: auth.go
//
// Generated by this command:
//
//	mockgen -package usecase -source=auth.go -destination=auth_mocks.go *
//

// Package usecase is a generated GoMock package.
package usecase

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockauthRepo is a mock of authRepo interface.
type MockauthRepo struct {
	ctrl     *gomock.Controller
	recorder *MockauthRepoMockRecorder
	isgomock struct{}
}

// MockauthRepoMockRecorder is the mock recorder for MockauthRepo.
type MockauthRepoMockRecorder struct {
	mock *MockauthRepo
}

// NewMockauthRepo creates a new mock instance.
func NewMockauthRepo(ctrl *gomock.Controller) *MockauthRepo {
	mock := &MockauthRepo{ctrl: ctrl}
	mock.recorder = &MockauthRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockauthRepo) EXPECT() *MockauthRepoMockRecorder {
	return m.recorder
}

// CheckLogin mocks base method.
func (m *MockauthRepo) CheckLogin(ctx context.Context, login string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckLogin", ctx, login)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckLogin indicates an expected call of CheckLogin.
func (mr *MockauthRepoMockRecorder) CheckLogin(ctx, login any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckLogin", reflect.TypeOf((*MockauthRepo)(nil).CheckLogin), ctx, login)
}

// CreateUser mocks base method.
func (m *MockauthRepo) CreateUser(ctx context.Context, login, pass string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", ctx, login, pass)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockauthRepoMockRecorder) CreateUser(ctx, login, pass any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockauthRepo)(nil).CreateUser), ctx, login, pass)
}
